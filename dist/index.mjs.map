{"version":3,"sources":["../src/lib/index.ts","../src/config.ts","../src/parsers/ranking.ts","../src/lib/ranking.ts","../src/lib/athlete.ts","../src/parsers/athlete.ts","../src/index.ts"],"sourcesContent":["import ranking from './ranking';\r\nimport athlete from './athlete';\r\nexport { ranking, athlete };\r\n","export const baseUrl = \"https://www.ufc.com\"","import * as cheerio from 'cheerio';\r\nimport { Ranking } from '../types/ranking';\r\nimport { Athlete } from '../types/athlete';\r\n\r\nexport function parseRanking(rankingHtml: string): Ranking[] {\r\n\tconst ranking: Ranking[] = [];\r\n\r\n\tconst $ = cheerio.load(rankingHtml);\r\n\r\n\tconst categoryElementArray = $('.view-grouping-content');\r\n\r\n\tcategoryElementArray.each((_categoryIndex, categoryElement) => {\r\n\t\tconst category: string = $(categoryElement).find('.info h4').text();\r\n\t\tconst athletes: Athlete[] = [];\r\n\t\tconst athleteLinks = $(categoryElement).find('a');\r\n\t\tathleteLinks.each((athleteLinkIndex, athleteLink) => {\r\n\t\t\tathletes.push({\r\n\t\t\t\trank: athleteLinkIndex + 1,\r\n\t\t\t\tname: $(athleteLink).text(),\r\n\t\t\t});\r\n\t\t});\r\n\t\tranking.push({ category, athletes });\r\n\t});\r\n\treturn ranking;\r\n}\r\n","import { baseUrl } from \"../config\";\r\nimport { parseRanking } from \"../parsers/ranking\";\r\nimport { Ranking } from \"../types/ranking\";\r\n\r\nexport async function getRanking():Promise<Ranking[]> {\r\n    try {\r\n        const rankingReponse = await fetch(`${baseUrl}/rankings`);\r\n        const rankingHtml = await rankingReponse.text();\r\n        const ranking = parseRanking(rankingHtml);\r\n        return ranking;\r\n    } catch (error) {\r\n        return []\r\n    }\r\n}\r\nconst ranking = {\r\n\tgetRanking,\r\n};\r\nexport default ranking;\r\n","import _ from 'lodash';\r\nimport { baseUrl } from '../config';\r\nimport { parseAthlete } from '../parsers/athlete';\r\nimport { Profile } from '../types/athlete';\r\n\r\nexport async function getProfile(name: string): Promise<Profile> {\r\n\ttry {\r\n\t\tconst formattedName = _.deburr(name).replace(/ /g, '-').toLowerCase();\r\n\t\tconst profileReponse = await fetch(`${baseUrl}/athlete/${formattedName}`);\r\n\t\tconst profileHtml = await profileReponse.text();\r\n\t\tconst profile = parseAthlete(profileHtml);\r\n\t\treturn profile;\r\n\t} catch (error) {\r\n\t\treturn {\r\n\t\t\tinfo: {\r\n\t\t\t\tactive: false,\r\n\t\t\t\tnickname: '',\r\n\t\t\t\tdivision: '',\r\n\t\t\t},\r\n\t\t\tstats: [],\r\n\t\t\tpicture: '',\r\n\t\t};\r\n\t}\r\n}\r\nconst athlete = {\r\n\tgetProfile,\r\n};\r\nexport default athlete;\r\n","import * as cheerio from 'cheerio';\r\n\r\nimport { Info, Profile, Stat } from '../types/athlete';\r\n\r\nexport function parseAthlete(athleteHtml: string): Profile {\r\n\tconst $ = cheerio.load(athleteHtml);\r\n\t// Info\r\n\tlet isActive = false;\r\n\tconst tags = $('.hero-profile__tag');\r\n\ttags.each((_tagIndex, tag) => {\r\n\t\tswitch ($(tag).text()) {\r\n\t\t\tcase 'Active':\r\n\t\t\t\tisActive = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Activo':\r\n\t\t\t\tisActive = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Activa':\r\n\t\t\t\tisActive = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Actif':\r\n\t\t\t\tisActive = true;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t});\r\n\tconst info: Info = {\r\n\t\tactive: isActive,\r\n\t\tnickname: $('.hero-profile__nickname').text().replace(/['\"]+/g, ''),\r\n\t\tdivision: $('.hero-profile__division-title').text(),\r\n\t};\r\n\t// Stats\r\n\tconst stats: Stat[] = []\r\n\r\n\tconst overallStatsElements = $('.athlete-stats__stat');\r\n\r\n\toverallStatsElements.each((_statIndex, stat) => {\r\n\t\tstats.push({\r\n\t\t\tmethod: $(stat).find('.athlete-stats__stat-text').text(),\r\n\t\t\ttotal: Number($(stat).find('.athlete-stats__stat-numb').text()),\r\n\t\t});\r\n\t});\r\n\t// Picture\r\n\tconst picture : string = $('.hero-profile__image-wrap').find('img').attr('src') || \"\";\r\n\t\r\n\tconst profile: Profile = {\r\n\t\tinfo,\r\n\t\tstats,\r\n\t\tpicture\r\n\t};\r\n\tconsole.log(JSON.stringify(profile))\r\n\treturn profile;\r\n}\r\n","import * as ufcapi from './lib';\r\n\r\nexport default ufcapi;"],"mappings":"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","names":["ranking","ranking","cheerio"]}